setOption("SpeciesLabel","HNauty")

begin model

# A model for oligomerization of the epidermal growth factor receptor (EGFR)
#   This model is an extension of the model of Kozer et al. (2013).

begin parameters

	NA 6.02214e14 # [=] number of molecules per nmol
	f 0.01 # fraction of cell to consider in simulation, dimensionless (stochastic simulations only)
	cellDen 6.0e8 # [=] number of cells per L
	Vo=f/cellDen # volume of fluid surrounding a single cell on average

	# See Table 1 in Kozer et al. (2013) for additional information about parameter values.
	# The unit system used here differs from that used in the study of Kozer et al. (2014).
	#   Here, we are using the unit system used by Kozer et al. (2014) and that recommended by Faeder et al. (2009).
	#   The two unit systems differ with respect to the unit used for abundance.
	#   Kozer et al. (2013) used nM, whereas Kozer et al. (2014) used molecules per cell.
	#   The two unit systems are related as follows: 1 nM = 1e6 molecules per cell.

	LT_nM_exp 0
	LT_exp LT_nM_exp*NA*Vo

	RT_nM_exp_29_ROI_9=RT_nM_exp_29_ROI_9__FREE__ # nM
	RT_exp=RT_nM_exp_29_ROI_9*NA*Vo
	ucf_exp_29_ROI_9=ucf_exp_29_ROI_9__FREE__ # converts cluster density per cell to cluster density per unit area
	base_fluor_29_ROI_9=base_fluor_29_ROI_9__FREE__

	K11     4.6                  #  Equilibrium association constant (/nM)
	k11r	0.02                 #  Dissociation constant (/s)
	k11f	K11*k11r/(NA*Vo)     #  Association constant (/nM/s)

	K21     5.3                  #  Equilibrium association constant (/nM)
	k21r	0.02                 #  Single-site dissociation constaint (/s)
	k21f	K21*k21r/2/(NA*Vo)   #  Association constant (/nM/s)

	K22     0.34                 #  Equilibrium association constant (/nM)
	k22r	0.2                  #  Single-site dissociation constaint (/s)
	k22f	2*K22*k22r/(NA*Vo)   #  Single-site association constant in (/nM/s)

	L20     212                  #  Equlibrium crossliinking constaint (/nM)
	l20r	1.24                 #  Dissociation rate constant in (/s)
	l20f	2*L20*l20r/(NA*Vo)   #  Association rate constant in (/nM/s)

	L21     244                  #  Equilibrium crosslinking constant (/nM)
	l21r	0.738                #  Dissociation rate constant in (/s)
	l21f    L21*l21r/(NA*Vo)     #  Association rate constant (/nM/s)

	L22     18.0                 #  Equilibrium crosslinking constant (/nM)
	l22r	0.272                #  Dissociation rate constant in (/s)
	l22f    2*L22*l22r/(NA*Vo)   #  Association rate constant (/nM/s)

	p0 1
	p1 0.8441399769
	p2 0.7566298493
	p3 0.6568449554
	p4 0.6090996865
	p5 0.5621516822
	p6 0.5188509038

	# flag that when set to 1 results in rates that are compatible with the ODE and SSA BioNetGen simulation methods
	# when it is set to 0, it results in rates compatible with NFsim interpretation due to a bug in product molecularity constraints
	bng_compatible 0

	# parameter for gathering all free EGF into a population molecule (for NFsim simulations)
	gather 1e8

end parameters

begin molecule types
	EGF(rec)
	EGFR(back,lig,cd~c~o)
	EGF_pop()	population
end molecule types

begin seed species
	EGF(rec)	            LT_exp*bng_compatible
	EGFR(back,lig,cd~c)	    RT_exp
	EGF_pop()	            LT_exp*(1-bng_compatible)
end seed species

begin observables

	# Unbound EGF
	Molecules EGFfree EGF(rec)

	# Ligand-free EGFR
	Molecules EGFRfree EGFR(lig)

	Molecules all_receptors EGFR()

	# EGFR monomer
	Species monomer EGFR==1

	# EGFR dimer
	Species dimer EGFR==2

	# EGFR trimer
	Species trimer EGFR==3

	# EGFR tetramer
	Species tetramer EGFR==4

	# higher-order oligomers
	Species pentamer EGFR==5
	Species hexamer EGFR==6

end observables

begin functions

	# Functions for conversion of species numbers to fluorescence

	CD0()=ucf_exp_29_ROI_9*(p0*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p0) + trimer*(3+6*p0) + tetramer*(4+12*p0) + pentamer*(5+20*p0) + hexamer*(6+30*p0)) + base_fluor_29_ROI_9
	CD1()=ucf_exp_29_ROI_9*(p1*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p1) + trimer*(3+6*p1) + tetramer*(4+12*p1) + pentamer*(5+20*p1) + hexamer*(6+30*p1)) + base_fluor_29_ROI_9
	CD2()=ucf_exp_29_ROI_9*(p2*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p2) + trimer*(3+6*p2) + tetramer*(4+12*p2) + pentamer*(5+20*p2) + hexamer*(6+30*p2)) + base_fluor_29_ROI_9
	CD3()=ucf_exp_29_ROI_9*(p3*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p3) + trimer*(3+6*p3) + tetramer*(4+12*p3) + pentamer*(5+20*p3) + hexamer*(6+30*p3)) + base_fluor_29_ROI_9
	CD4()=ucf_exp_29_ROI_9*(p4*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p4) + trimer*(3+6*p4) + tetramer*(4+12*p4) + pentamer*(5+20*p4) + hexamer*(6+30*p4)) + base_fluor_29_ROI_9
	CD5()=ucf_exp_29_ROI_9*(p5*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p5) + trimer*(3+6*p5) + tetramer*(4+12*p5) + pentamer*(5+20*p5) + hexamer*(6+30*p5)) + base_fluor_29_ROI_9
	CD6()=ucf_exp_29_ROI_9*(p6*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p6) + trimer*(3+6*p6) + tetramer*(4+12*p6) + pentamer*(5+20*p6) + hexamer*(6+30*p6)) + base_fluor_29_ROI_9

end functions

begin reaction rules

	# EGF binding to EGFR not crosslinked via the ectodomain. 
	EGF(rec) + EGFR(back,lig) <-> EGF(rec!1).EGFR(back,lig!1) k11f*bng_compatible,k11r*bng_compatible
	EGF_pop() + EGFR(back,lig) -> EGF(rec!1).EGFR(back,lig!1) k11f*(1-bng_compatible)
	EGF(rec!1).EGFR(back,lig!1) -> EGF(rec) + EGFR(back,lig) k11r*(1-bng_compatible)

	# EGF binding to EGFR that is crosslinked via the ectodomain to a second EGFR and both crosslinked EGFR are free of EGF. 
	EGF(rec) + EGFR(back!1,lig).EGFR(back!1,lig) <-> EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) k21f*bng_compatible,k21r*bng_compatible
	EGF_pop() + EGFR(back!1,lig).EGFR(back!1,lig) -> EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) k21f*(1-bng_compatible)
	EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) -> EGF(rec) + EGFR(back!1,lig).EGFR(back!1,lig) k21r*(1-bng_compatible)

	# EGF binding to EGFR that is crosslinked via the ectodomain to a second EGFR and the second EGFR is bound to EGF.  
	EGF(rec) + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) <-> EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) k22f*bng_compatible,k22r*bng_compatible
	EGF_pop() + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) -> EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) k22f*(1-bng_compatible)
	EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) -> EGF(rec) + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) k22r*(1-bng_compatible)

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and both EGFR are free of EGF.
	EGFR(back,lig) + EGFR(back,lig) <-> EGFR(back!1,lig).EGFR(back!1,lig) l20f,l20r 

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and only one EGFR is free of EGF. 
	EGFR(back,lig) + EGF(rec!1).EGFR(back,lig!1) <-> EGFR(back!2,lig).EGF(rec!1).EGFR(back!2,lig!1) l21f,l21r

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and both EGFR are occupied by EGF. 
	EGF(rec!1).EGFR(back,lig!1) + EGF(rec!2).EGFR(back,lig!2) <-> EGF(rec!1).EGFR(back!3,lig!1).EGF(rec!2).EGFR(back!3,lig!2) l22f,l22r

	EGF(rec) -> EGF_pop() gather*(1-bng_compatible)

end reaction rules

end model

begin actions

#################################
# BioNetGen compatible commands #
#################################
setParameter("bng_compatible",1) # defaults to 0
setParameter("f",1) # defaults to 0.01
generate_network({overwrite=>1,max_stoich=>{EGF=>4,EGFR=>4}})

setParameter("LT_nM_exp",0)
simulate({suffix=>"S89_ExtractedData_Image0029_ROI_9",method=>"ode",t_start=>0,t_end=>300,n_steps=>1,print_functions=>1})

#############################
# NFsim compatible commands #
#############################

# setParameter("LT_nM_exp", 0)
# simulate({suffix=>"S89_ExtractedData_Image0029_ROI_9",method=>"nf",t_start=>0,t_end=>300,n_steps=>1,print_functions=>1,gml=>1e7,complex=>1,get_final_state=>0})


end actions
