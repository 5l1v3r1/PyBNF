# Implementation of the parabola from the Mitra constrained optimization manuscript Fig. 1

begin model

  begin parameters

# Original values used 
# (a,b,c,d,e) = 0.5, 3, 5, 1, 1.5

    a a__FREE__
    b b__FREE__
    c c__FREE__
    d d__FREE__
    e e__FREE__
    f f__FREE__
    g g__FREE__

  end parameters

  begin molecule types
    counter()
  end molecule types

  begin seed species
    # initial conditions
    counter() 0
  end seed species

  begin observables
    Molecules x counter()
  end observables

  begin functions

    y1()=a*x^4-b*x^3+c*x^2-d*x+e
    y2()=g*x^4-f*x^3+e*x^2-d*x+c
  end functions

  begin reaction rules
    0->counter() 1
  end reaction rules

end model

generate_network({overwrite=>1})
simulate({method=>"ode",t_start=>0,t_end=>10,n_steps=>1000,suffix=>"wt",print_functions=>1})
# "Mutate" a parameter, and simulate a second time
setParameter("d",27)
simulate({method=>"ode",t_start=>0,t_end=>10,n_steps=>1000,suffix=>"mut",print_functions=>1})
