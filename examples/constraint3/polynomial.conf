# Model specification

# This is a contrived problem featuring polynomial functions.
# I specified a bunch of crazy-looking constraints in the constraint file, which are all true for the ground truth. 
# This is not interesting from a modeling perspective, but is technically demanding enough that if we get a fit here that satisfies everything, it's a good indication the code is working.

model = examples/constraint3/polynomial.bngl : examples/constraint3/wt.con, examples/constraint3/wt.exp, examples/constraint3/mut.con


# Algorithm and objective function choice
fit_type = ss
objfunc = sos

output_dir = ../PyBNF-output/constraint3

initialization = lh
verbosity = 2
delete_old_files = 1

# Parameters
loguniform_var = a__FREE 0.01 10
uniform_var = b__FREE 0 10
normal_var = c__FREE 40 10
uniform_var = d__FREE 0 100
uniform_var = e__FREE 0 100
lognormal_var = f__FREE 1 0.5
loguniform_var = g__FREE 0.01 10

# Settings
population_size = 12
max_iterations = 1000
