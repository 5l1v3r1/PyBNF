To assist in the writing documentation in the future, this file will serve as a record of what keys in the conf file we have implemented in the code, and what each one does. 
Please update this file whenever you add support for new .conf keys in the code


***Fundamental model specification***

model - specifies the mapping between .bngl model files and .exp files. This has a unique syntax, model = model.bngl : data1.exp, data2.exp
bng_command - path to BNG2.pl
output_dir - Directory where to save the output. Default: .
fit_type - Which fitting algorithm to use. Options: pso - Particle Swarm Optimization. Future options: de - Differential Evolution, sa - Simulated Annealing
objfunc - Which objective function to use. Options: chisq - Chi Squared. Default: chisq


***Parameter specification***

random_var = name__FREE___ min max - a uniformly distributed variable with bounds [min, max]
loguniform_var = name__FREE___ min max - a log-uniform distributed variable with bounds [min, max]. Bounds should be in regular space, eg [0.01, 100]
lognormrandom_var = name__FREE__ mu sigma - a log-normal distributed variable with mean mu, std dev sigma. mu, sigma are given in log base 10 space. 
static_list_var = name__FREE__ a1 a2 a3... - must take one of the values a1, a2, a3, ... , This is only partially implemented. 


***General options***

delete_old_files: If 1, only save the latest copy of sorted_params.txt, delete older ones. Default: 0
num_to_output: The maximum number of PSets to write when writing the trajectory. Default: 1000000
output_every: Write the Trajectory to file every x iterations. Default: 20


***Settings that apply to multiple Algorithms***

population_size: How many individuals to have in the population. 
max_iterations: Max number of iterations
initialization: 'rand' - initialize params randomly according to the distributions. 'lh' - For random_var's and loguniform_var's, initialize with a latin hypercube distribution, to more uniformly cover the search space.

***Differential Evolution Settings***

mutation_rate - When generating a new individual, mutate each parameter with this probability. Default: 0.5
mutation_factor - When mutating a parameter x, change it by mutation_factor*(PS1[x] - PS2[x]) where PS1 and PS2 are random other PSets in the population.  Default: 1.0

# These are related to the more parallel-friendly "island-based" differential evolution. If all omitted, uses regular differential evolution, which is still parallelizable, but has to wait until a whole generation finishes before moving on to the next. 
islands: Number of separate populations to evolve. Default: 1
migrate_every: After this number of generations, migrate some individuals between islands. Default: 20 (but Inf if islands = 1)
num_to_migrate: How many individuals to migrate off of each island during migration? Default: 3



***Particle Swarm settings***

cognitive: Acceleration toward a particle's own best fit
social: Acceleration toward the global best fit
particle_weight: Inertia weight of particle. Default: 1

# particle swarm params related to adaptive weight changing, which may or may not be useful
particle_weight_final: The final particle weight after the adaptive changing. Default: the value of particle_weight, effectively disabling this feature. 
adaptive_n_max: After n_max "unproductive" iterations, we have moved halfway from the initial weight to the final weight. Default: 30
adaptive_n_stop: Afer this many "unproductive" iterations, stop the simulation. Default: Inf
adaptive_abs_tol: Parameter for checking if an iteration was "unproductive" Default: 0
adaptive_rel_tol: Parameter for checking if an iteration was "unproductive" Default: 0
